#include<stdio.h>
#include<stdlib.h>

typedef struct Node{
    int data;
    struct Node* link;
}Node;

Node* createNode(int data){
    Node* new = malloc(sizeof(Node));
    new -> data = data;
    new-> link = NULL;
    return new;
}
Node* head = NULL;
void InsertF(int data){
    if(head==NULL){
        Node* new =createNode(data);
        head = new;
    }
    else {
        Node* new = createNode(data);
        new->link = head;
        head = new;
    }
}
void InsertE(int data){
    Node* new = createNode(data);
    if(head == NULL){
       head = new;
    }
    else{
        Node* ptr= head;
        while(ptr->link!=NULL){
            ptr =ptr->link;
        }
        ptr->link = new;
    }
}
void InsertAny(int key, int data){
    if(head==NULL)
        printf("Search failed. Specified position does not exist \n");
    else
    {
        Node* ptr = head;
        while(ptr->link!=NULL && ptr->data!=key){
            ptr=ptr->link;
        }
        if(ptr->data!=key)
            printf("Search failed. Specified position does not exist here \n");
        else 
        {
            Node* new =createNode(data);
            new->link = ptr->link;
            ptr->link = new;
        }
    }
}
void DeleteF(){
    if(head==NULL){
        printf("List is empty \n");
    }
    else{
    Node* temp = head;
    head = head->link;
    free(temp);
    printf("Element deleted from front \n");
    }
}
void Display(){
    if(head==NULL)
        printf("List is empty \n");
    else 
    {
        Node* ptr = head;
        while(ptr!=NULL){
            printf("%d \n",ptr->data);
            ptr=ptr->link;
        }
    }
}
int main() {
int choice, data,key;
    
    while (1) {
        printf("\n 1. Insert at front \n 2. Insert at end \n 3. Insert at specific position \n 4. Delete from front \n 5. Display\n 6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                printf("Enter the element to insert at front: ");
                scanf("%d", &data);
                InsertF(data);
                break;
            case 2: 
                printf("Enter the element to insert at end: ");
                scanf("%d",&data);
                InsertE(data);
                break;
            case 3:
                printf("Enter the element to be inserted \n");
                scanf("%d",&data);
                printf("Enter the position to be inserted \n");
                scanf("%d",&key);
                InsertAny(key,data);
                break;
            case 4: 
                DeleteF();
                printf("Updated list: \n");
                Display();
                break;
            case 5:
                Display();
                break;
            case 6:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice!\n");
        }
    }
    return 0;
}
